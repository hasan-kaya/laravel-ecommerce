version: '3.9'

services:
  app:
    build:
      context: ./docker/php
    deploy:
      replicas: 3
    volumes:
      - .:/var/www/html
    networks:
      - laravel_network
    depends_on:
      - db

  web:
    image: nginx:stable-alpine
    container_name: laravel_web
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel_network
    depends_on:
      - app

  db:
    image: postgres:15
    container_name: laravel_db
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    networks:
      - laravel_network
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    shm_size: 256mb

  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    ports:
      - "6379:6379"
    networks:
      - laravel_network
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxclients 10000 --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  queue-worker:
    build:
      context: ./docker/php
    deploy:
      replicas: 2
    volumes:
      - .:/var/www/html
    networks:
      - laravel_network
    depends_on:
      - app
      - db
      - redis
    command: php artisan queue:work redis --queue=payments,stock --tries=3 --backoff=60,300,900 --timeout=120 --sleep=0 --max-jobs=1000 --max-time=3600
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "php artisan tinker --execute='echo \"OK\";' | grep -q OK"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - QUEUE_WORKER_ID=${HOSTNAME}
    mem_limit: 512m
    cpus: 0.5

networks:
  laravel_network:
    driver: bridge

volumes:
  db_data:
  redis_data:
